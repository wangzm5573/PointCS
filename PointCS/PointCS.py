from __future__ import annotations
from 软件包.蟒蛇 import *





作者: 常量[字符串] = "wangzm5773"

# @枚举.全局枚举
@枚举._简单枚举(枚举.整数标志)
class 速建者运行状态:
    未启动 = 0
    正在运行 = 1
    正在重连 = 2
    已停止 = 3





def 删除控制台样式字符(文本: 字符串) -> 字符串:
    return 正则.替换(r"\x1b\[[0-9;]*[m|K]", "", 文本)





class 速建者异常(异常): pass
class 速建者启动异常(速建者异常): pass
class 速建者启动过于频繁异常(速建者启动异常): pass
class 租赁服(对象):
    def __初始化__(当前对象: 租赁服, 租赁服号: 字符串, 租赁服密码: 可选[字符串] = 无) -> 无:
        当前对象.租赁服号 = 租赁服号
        当前对象.租赁服密码 = 租赁服密码 if 租赁服密码 is not 无 else 作者
        当前对象.速建者运行状态 = 速建者运行状态.未启动
        当前对象._启动速建者()


    def _启动速建者(当前对象: 租赁服) -> 无:
        当前对象.速建者进程 = 子进程.启动进程(
            程序路径 = "./程序/速建者/Windows_64bit.exe",
            启动参数 = [
                "--token", "./程序/速建者/令牌",
                "--code", 当前对象.租赁服号,
                "--password", 当前对象.租赁服密码,
                "--no-update-check", "--no-readline"
            ],
            编码 = "UTF-8", 标准输出 = 子进程.管道, 标准错误输出 = 子进程.管道, 是否使用通用换行符 = 真
        )
        错误信息 = 字符串("")
        异常类型 = 速建者启动异常
        while 真:
            原始输出 = 当前对象.速建者进程.标准输出.读取一行()
            去色输出 = 删除控制台样式字符(原始输出)
            打印(原始输出, end = "")

            if 去色输出.开头是否为(" ERROR  "):
                去色输出 = 去色输出.替换(" ERROR  ", "", 1)

                if 去色输出.开头是否为("按ENTER（回车）键来退出程序。"):
                    当前对象.速建者进程.终止()
                    while 错误信息.末尾是否为("\n"):
                        错误信息 = 错误信息[:-1]
                    raise 异常类型(错误信息)

                错误信息 += 去色输出
                if 去色输出.开头是否为("[RATE LIMIT]"):
                    异常类型 = 速建者启动过于频繁异常

            if (速建者进程返回码 := 当前对象.速建者进程.是否终止()) is not 无:
                raise 异常类型("速建者退出.")




if __name__ == "__main__":
    租赁服("74694942")